apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: snifferdb
    name: snifferdb
  spec: {}
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: snifferdb
    name: snifferdb
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: snifferdb:latest
    postCommit: {}
    resources: {}
    source:
      git:
        ref: master
        uri: git@spork.spawar.navy.mil:SDE/WhoIsHome.git
      sourceSecret:
        name: "sshsecret"
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: support/docker/mysql/dev/Dockerfile
      type: Docker
    triggers:
    - generic:
        secret: oW2DKXiHA2pOw5-fZxOs
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: snifferdb
    name: snifferdb
  spec:
    replicas: 1
    selector:
      app: snifferdb
      deploymentconfig: snifferdb
    strategy:
      resources: {}
    template:
      metadata:
        annotations:
          openshift.io/container.snifferdb.image.entrypoint: '["container-entrypoint","run-mysqld"]'
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: snifferdb
          deploymentconfig: snifferdb
      spec:
        containers:
        - env:
          - name: MYSQL_PASSWORD
            value: pungent
          - name: MYSQL_ROOT_PASSWORD
            value: sniffered
          - name: MYSQL_USER
            value: admin
          image: snifferdb:latest
          name: snifferdb
          ports:
          - containerPort: 3306
            protocol: TCP
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - snifferdb
        from:
          kind: ImageStreamTag
          name: snifferdb:latest
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: snifferdb
    name: snifferdb
  spec:
    ports:
    - name: 3306-tcp
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      app: snifferdb
      deploymentconfig: snifferdb
  status:
    loadBalancer: {}
kind: List
metadata: {}
